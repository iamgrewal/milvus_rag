test_if	input.v	/^fn test_if() {$/;"	f	line:1	typeref:typename:	signature:()	roles:def	end:40
a	input.v	/^    a := 0 \/\/ test$/;"	v	line:2	fn:test_if	roles:def
b	input.v	/^        b := 0$/;"	v	line:4	fn:test_if	roles:def
c	input.v	/^        c := 0$/;"	v	line:7	fn:test_if	roles:def
d	input.v	/^        d := 0$/;"	v	line:10	fn:test_if	roles:def
e	input.v	/^        e := 0$/;"	v	line:13	fn:test_if	roles:def
f	input.v	/^        f := 0$/;"	v	line:16	fn:test_if	roles:def
g	input.v	/^        g := 0$/;"	v	line:19	fn:test_if	roles:def
h	input.v	/^            h := 0 \/* test *\/$/;"	v	line:23	fn:test_if	roles:def
i	input.v	/^            i := 0 \/* test \/* NESTED *\/ test *\/$/;"	v	line:26	fn:test_if	roles:def
j	input.v	/^            j := 0$/;"	v	line:31	fn:test_if	roles:def
k	input.v	/^            k := 0$/;"	v	line:34	fn:test_if	roles:def
l	input.v	/^        l := x$/;"	v	line:38	fn:test_if	roles:def
test_for	input-1.v	/^fn test_for() {$/;"	f	line:1	typeref:typename:	signature:()	roles:def	end:39
a	input-1.v	/^    for a in x {$/;"	v	line:3	roles:def
foo	input-1.v	/^foo:$/;"	l	line:5	fn:test_for	roles:def
i	input-1.v	/^    for mut i, b in x {$/;"	v	line:6	access:mut	roles:def
b	input-1.v	/^    for mut i, b in x {$/;"	v	line:6	roles:def
c	input-1.v	/^    for mut c in x {$/;"	v	line:8	access:mut	roles:def
i	input-1.v	/^    for i, mut d in x {$/;"	v	line:10	roles:def
d	input-1.v	/^    for i, mut d in x {$/;"	v	line:10	access:mut	roles:def
bar	input-1.v	/^bar:$/;"	l	line:12	fn:test_for	roles:def
e	input-1.v	/^    for _, e in x {$/;"	v	line:13	roles:def
f	input-1.v	/^    for f, _ in x {$/;"	v	line:15	roles:def
g	input-1.v	/^    for g in 0..5 {$/;"	v	line:19	roles:def
i	input-1.v	/^    for i := 0; i < 100; i++ {$/;"	v	line:30	roles:def
p	input-1.v	/^    for p, q := a.b.c, x.y.z; p < q; {$/;"	v	line:37	roles:def
q	input-1.v	/^    for p, q := a.b.c, x.y.z; p < q; {$/;"	v	line:37	roles:def
test_defer_return	input-2.v	/^fn test_defer_return() {$/;"	f	line:1	typeref:typename:	signature:()	roles:def	end:6
x	input-2.v	/^    x := get_lock()$/;"	v	line:2	fn:test_defer_return	roles:def
test_return_with_expr	input-2.v	/^fn test_return_with_expr() {$/;"	f	line:8	typeref:typename:	signature:()	roles:def	end:10
test_return_wo_expr	input-2.v	/^fn test_return_wo_expr() {$/;"	f	line:12	typeref:typename:	signature:()	roles:def	end:14
test_assert	input-2.v	/^fn test_assert() {$/;"	f	line:16	typeref:typename:	signature:()	roles:def	end:18
test_is_operator	input-2.v	/^fn test_is_operator() {$/;"	f	line:20	typeref:typename:	signature:()	roles:def	end:24
main	input-3.v	/^fn main() {$/;"	f	line:1	typeref:typename:	signature:()	roles:def	end:5
a	input-3.v	/^        a := 55$/;"	v	line:3	fn:main	roles:def
main	input-4.v	/^fn main() {$/;"	f	line:1	typeref:typename:	signature:()	roles:def	end:7
a	input-4.v	/^    a := 1$/;"	v	line:6	fn:main	roles:def
main	input-5.v	/^fn main() {$/;"	f	line:1	typeref:typename:	signature:()	roles:def	end:8
a	input-5.v	/^		a := 5$/;"	v	line:3	fn:main	roles:def
a	input-5.v	/^		a := 5$/;"	v	line:6	fn:main	roles:def
main	input-6.v	/^fn main() {$/;"	f	line:1	typeref:typename:	signature:()	roles:def	end:11
a	input-6.v	/^		a := 0$/;"	v	line:3	fn:main	roles:def
b	input-6.v	/^		b := 0$/;"	v	line:5	fn:main	roles:def
c	input-6.v	/^		c := 0$/;"	v	line:7	fn:main	roles:def
d	input-6.v	/^		d := 0$/;"	v	line:9	fn:main	roles:def
