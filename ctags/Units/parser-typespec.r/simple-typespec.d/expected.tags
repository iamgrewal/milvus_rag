Name.Space	input.tsp	/^namespace Name.Space;$/;"	n
Inner	input.tsp	/^namespace Inner {$/;"	n	namespace:Name.Space
Versions	input.tsp	/^  enum Versions {$/;"	g	namespace:Name.Space.Inner
OpA	input.tsp	/^  op OpA<T extends TypeSpec.Reflection.Model> is OpB<$/;"	o	namespace:Name.Space.Inner
InterfaceA	input.tsp	/^  interface InterfaceA extends InterfaceB {$/;"	i	namespace:Name.Space.Inner
opA	input.tsp	/^    opA is OpA<{$/;"	p	interface:Name.Space.Inner.InterfaceA
opB	input.tsp	/^    opB is OpB<$/;"	p	interface:Name.Space.Inner.InterfaceA
UnionA	input.tsp	/^  union UnionA {$/;"	u	namespace:Name.Space.Inner
ModelA	input.tsp	/^model ModelA {$/;"	m	namespace:Name.Space
contentA	input.tsp	/^  contentA: ModelB;$/;"	p	model:Name.Space.ModelA
contentB	input.tsp	/^  contentB?: boolean;$/;"	p	model:Name.Space.ModelA
ModelB	input.tsp	/^model ModelB extends ModelA {$/;"	m	namespace:Name.Space
AliasA	input.tsp	/^alias AliasA<$/;"	a	namespace:Name.Space
