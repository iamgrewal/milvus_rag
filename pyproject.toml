[project]
name = "milvus_rag"
version = "0.1.1"
description = "Milvus-powered RAG pipeline with FastAPI and Neo4j"
authors = [
    {name = "Jatinder Grewal", email = "iamgrewal@gmail.com"}
]
dependencies = [
    "langchain",
    "openai",
    "sentence-transformers",
    "pymilvus",
    "neo4j",
    "neo4j-graphrag[openai]",
    "python-dotenv",
    "tqdm",
    "requests",
    "numpy",
    "protobuf>=3.20.3,<5.0.0",  # Compatible with tensorflow
    "grpcio-tools",
    "pansi>=2020.7.3",  # Required by py2neo
    "packaging>=23.2,<24.0"  # Compatible with langfuse
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["graphrag", "milvus_docs"]

[project.optional-dependencies]
dev = [
    "pytest",
    "black",
    "isort",
    "mypy",
    "flake8"
] 
[project]
name = "milvus-rag"
version = "0.1.0"
description = "Hybrid RAG system using Milvus and Neo4j"
authors = [{name = "Jay Grewal", email = "jay@onixnet.com"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
[project.urls]
homepage = "https://github.com/iamgrewal/milvus_rag"
repository = "https://github.com/iamgrewal/milvus_rag"
documentation = "https://github.com/iamgrewal/milvus_rag#readme"
[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["S101"]

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pymilvus.*",
    "neo4j.*",
    "spacy.*",
    "sentence_transformers.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "benchmark: marks tests as performance benchmarks",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/graphrag"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
